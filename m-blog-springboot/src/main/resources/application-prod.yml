server:
  port: 8080
  servlet:
    session:
      # 设置session过期时间
      timeout: 21600
#  tomcat:
#    connection-timeout: 18000000

spring:
  application:
    name: m-blog-springboot
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    name: defaultDataSource
    url: 
    username: 
    password: MySQL密码
  # redis相关
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # 云服务器地址
    host: 
    lettuce:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 20
        # 最大阻塞等待时间(负数表示没限制)
        max-wait: -1
        # 连接池中的最大空闲连接
        max-idle: 5
        # 连接池中的最小空闲连接
        min-idle: 0
    # redis密码
    password: 你的redis密码
    # Redis服务器连接端口
    port: 6379
    # 连接超时时间（毫秒）
    timeout: 1800000
  # rabbitMQ
  rabbitmq:
    host: 
    port: 
    username: 
    password: 
    listener:
      simple:
        retry:
          enabled: true
          max-attempts: 3 #最大重试次数
          initial-interval: 3000 #重试间隔时间（单位毫秒）
  # elasticSearch
  elasticsearch:
    rest:
      uris: 你的elastic服务器ip:9200
  # 邮箱配置
  mail:
    host: smtp.qq.com
    username: 
    password: 
    default-encoding: UTF-8
    port: 587
    properties:
      mail:
      smtp:
      auth: true
      socketFactory:
      class: javax.net.ssl.SSLSocketFactory
  # 上传文件最大大小
  servlet:
    multipart:
      # 设置单个文件的大小
      max-file-size: 100MB
      # 设置单次请求的文件的总大小
      max-request-size: 100MB

# mybatisPlus设置
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      # 逻辑删除：1表示已删除 0表示未删除
      logic-delete-value: 1
      logic-not-delete-value: 0
  mapper-locations: classpath:/mapper/**/*.xml


gravatar:
  qqEmail: 

# 搜索文章模式
search:
  mode: mysql
#  mode: elasticSearch

# 网站路径,用于邮件通知
website:
  url: http://www.mingzib.xyz/

# 第三方QQ登录
qq:
  app-id: 102045697
  check-token-url: https://graph.qq.com/oauth2.0/me?access_token={access_token}
  user-info-url: https://graph.qq.com/user/get_user_info?openid={openid}&access_token={access_token}&oauth_consumer_key={oauth_consumer_key}

# 上传文件
upload:
  # 上传文件模式
  mode: qiniu
  # 本地上传
  local:
    # nginx映射本地文件位置
    url: 
    # 本地文件存储路径
    path: 
  # 七牛云存储
  qiniu:
    # 域名前缀
    prefix: 
    # 公共密钥
    accessKey: 
    # 私钥
    secretKey: 
    # 空间名
    bucket: 
